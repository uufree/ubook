// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace samples {
namespace common {
class AllTypes_Field19EntryDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllTypes::AllTypes_Field19Entry> {
} _AllTypes_Field19Entry_default_instance_;
class AllTypesDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllTypes> {
  public:
  ::google::protobuf::internal::ArenaStringPtr field17_;
  ::google::protobuf::int64 field18_;
} _AllTypes_default_instance_;
class SearchRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchRequest> {
} _SearchRequest_default_instance_;
class SearchResponse_ResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchResponse_Result> {
} _SearchResponse_Result_default_instance_;
class SearchResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SearchResponse> {
} _SearchResponse_default_instance_;

namespace protobuf_proto_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, double__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, float__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, bool__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, repeat_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, bytes_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_AllTypes_default_instance_), field17_),
  GOOGLE_PROTOBUF_GENERATED_DEFAULT_ONEOF_FIELD_OFFSET((&_AllTypes_default_instance_), field18_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, field19_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, struct__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllTypes, test_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchRequest, log_level_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse_Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse_Result, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse_Result, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse_Result, snippets_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SearchResponse, results_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(AllTypes)},
  { 22, -1, sizeof(SearchRequest)},
  { 29, -1, sizeof(SearchResponse_Result)},
  { 37, -1, sizeof(SearchResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllTypes_Field19Entry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllTypes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchResponse_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SearchResponse_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "proto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
file_level_metadata[0].reflection = AllTypes::AllTypes_Field19Entry::CreateReflection(file_level_metadata[0].descriptor, _AllTypes_Field19Entry_default_instance_.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _AllTypes_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SearchRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _SearchResponse_Result_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _SearchResponse_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  delete file_level_metadata[0].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::InitDefaults();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::InitDefaults();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::InitDefaults();
  ::grpc::gateway::protoc_gen_swagger::options::protobuf_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto::InitDefaults();
  _AllTypes_Field19Entry_default_instance_.DefaultConstruct();
  _AllTypes_default_instance_.DefaultConstruct();
  _SearchRequest_default_instance_.DefaultConstruct();
  _SearchResponse_Result_default_instance_.DefaultConstruct();
  _SearchResponse_default_instance_.DefaultConstruct();
  _AllTypes_Field19Entry_default_instance_.get_mutable()->set_default_instance(_AllTypes_Field19Entry_default_instance_.get_mutable());
  _AllTypes_Field19Entry_default_instance_.get_mutable()->InitAsDefaultInstance();
  _AllTypes_default_instance_.field17_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _AllTypes_default_instance_.field18_ = GOOGLE_LONGLONG(0);
  _AllTypes_default_instance_.get_mutable()->timestamp_ = const_cast< ::google::protobuf::Timestamp*>(
      ::google::protobuf::Timestamp::internal_default_instance());
  _AllTypes_default_instance_.get_mutable()->duration_ = const_cast< ::google::protobuf::Duration*>(
      ::google::protobuf::Duration::internal_default_instance());
  _AllTypes_default_instance_.get_mutable()->struct__ = const_cast< ::google::protobuf::Struct*>(
      ::google::protobuf::Struct::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013proto.proto\022\016samples.common\032\037google/pr"
      "otobuf/timestamp.proto\032\034google/protobuf/"
      "struct.proto\032\036google/protobuf/duration.p"
      "roto\032\034google/api/annotations.proto\032,prot"
      "oc-gen-swagger/options/annotations.proto"
      "\"\354\003\n\010AllTypes\022\016\n\006double\030\001 \001(\001\022\r\n\005float\030\002"
      " \001(\002\022\r\n\005int32\030\003 \001(\005\022\r\n\005int64\030\004 \001(\003\022\016\n\006ui"
      "nt32\030\005 \001(\r\022\016\n\006uint64\030\006 \001(\004\022\014\n\004bool\030\r \001(\010"
      "\022\016\n\006string\030\016 \001(\t\022\025\n\rrepeat_string\030\017 \003(\t\022"
      "\r\n\005bytes\030\020 \001(\014\022\021\n\007field17\030\021 \001(\tH\000\022\021\n\007fie"
      "ld18\030\022 \001(\003H\000\0226\n\007field19\030\023 \003(\0132%.samples."
      "common.AllTypes.Field19Entry\022-\n\ttimestam"
      "p\030\024 \001(\0132\032.google.protobuf.Timestamp\022+\n\010d"
      "uration\030\025 \001(\0132\031.google.protobuf.Duration"
      "\022\'\n\006struct\030\026 \001(\0132\027.google.protobuf.Struc"
      "t\032.\n\014Field19Entry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030"
      "\002 \001(\003:\0028\001B\006\n\004testJ\004\010\007\020\010J\004\010\010\020\tJ\004\010\t\020\013R\010sfi"
      "xed32R\010sfixed64\"H\n\rSearchRequest\022\n\n\002id\030\001"
      " \001(\t\022+\n\tlog_level\030\002 \001(\0162\030.samples.common"
      ".Loglevel\"\200\001\n\016SearchResponse\0226\n\007results\030"
      "\001 \003(\0132%.samples.common.SearchResponse.Re"
      "sult\0326\n\006Result\022\013\n\003url\030\001 \001(\t\022\r\n\005title\030\002 \001"
      "(\t\022\020\n\010snippets\030\003 \001(\t*A\n\010Loglevel\022\013\n\007UNKN"
      "OWM\020\000\022\t\n\005DEBUG\020\001\022\010\n\004INFO\020\002\022\010\n\004WARN\020\003\022\t\n\005"
      "ERROR\020\0042\341\003\n\rSearchService\022t\n\020PostSingleS"
      "earch\022\035.samples.common.SearchRequest\032\036.s"
      "amples.common.SearchResponse\"!\202\323\344\223\002\033\"\026/v"
      "1/single_search/{id}:\001*\022s\n\017PutSingleSear"
      "ch\022\035.samples.common.SearchRequest\032\036.samp"
      "les.common.SearchResponse\"!\202\323\344\223\002\033\032\026/v1/s"
      "ingle_search/{id}:\001*\022p\n\017GetSingleSearch\022"
      "\035.samples.common.SearchRequest\032\036.samples"
      ".common.SearchResponse\"\036\202\323\344\223\002\030\022\026/v1/sing"
      "le_search/{id}\022s\n\022DeleteSingleSearch\022\035.s"
      "amples.common.SearchRequest\032\036.samples.co"
      "mmon.SearchResponse\"\036\202\323\344\223\002\030*\026/v1/single_"
      "search/{id}2\230\002\n\023StreamSearchService\022T\n\021F"
      "rontStreamSearch\022\035.samples.common.Search"
      "Request\032\036.samples.common.SearchResponse("
      "\001\022S\n\020BackStreamSearch\022\035.samples.common.S"
      "earchRequest\032\036.samples.common.SearchResp"
      "onse0\001\022V\n\021BatchStreamSearch\022\035.samples.co"
      "mmon.SearchRequest\032\036.samples.common.Sear"
      "chResponse(\0010\001B\033Z\010test/api\222A\016\022\014\n\004test2\004v"
      "0.1b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1771);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "proto.proto", &protobuf_RegisterTypes);
  ::google::protobuf::protobuf_google_2fprotobuf_2ftimestamp_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fstruct_2eproto::AddDescriptors();
  ::google::protobuf::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::google::api::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::grpc::gateway::protoc_gen_swagger::options::protobuf_protoc_2dgen_2dswagger_2foptions_2fannotations_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_proto_2eproto

const ::google::protobuf::EnumDescriptor* Loglevel_descriptor() {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_enum_descriptors[0];
}
bool Loglevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

AllTypes::AllTypes_Field19Entry::AllTypes_Field19Entry() {}
AllTypes::AllTypes_Field19Entry::AllTypes_Field19Entry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata AllTypes::AllTypes_Field19Entry::GetMetadata() const {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[0];
}
void AllTypes::AllTypes_Field19Entry::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}
void AllTypes::AllTypes_Field19Entry::MergeFrom(const AllTypes_Field19Entry& other) {
  MergeFromInternal(other);
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllTypes::kDoubleFieldNumber;
const int AllTypes::kFloatFieldNumber;
const int AllTypes::kInt32FieldNumber;
const int AllTypes::kInt64FieldNumber;
const int AllTypes::kUint32FieldNumber;
const int AllTypes::kUint64FieldNumber;
const int AllTypes::kBoolFieldNumber;
const int AllTypes::kStringFieldNumber;
const int AllTypes::kRepeatStringFieldNumber;
const int AllTypes::kBytesFieldNumber;
const int AllTypes::kField17FieldNumber;
const int AllTypes::kField18FieldNumber;
const int AllTypes::kField19FieldNumber;
const int AllTypes::kTimestampFieldNumber;
const int AllTypes::kDurationFieldNumber;
const int AllTypes::kStructFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllTypes::AllTypes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:samples.common.AllTypes)
}
AllTypes::AllTypes(const AllTypes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      repeat_string_(from.repeat_string_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  field19_.MergeFrom(from.field19_);
  string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.string().size() > 0) {
    string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_);
  }
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bytes().size() > 0) {
    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::google::protobuf::Timestamp(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  if (from.has_duration()) {
    duration_ = new ::google::protobuf::Duration(*from.duration_);
  } else {
    duration_ = NULL;
  }
  if (from.has_struct_()) {
    struct__ = new ::google::protobuf::Struct(*from.struct__);
  } else {
    struct__ = NULL;
  }
  ::memcpy(&double__, &from.double__,
    reinterpret_cast<char*>(&bool__) -
    reinterpret_cast<char*>(&double__) + sizeof(bool__));
  clear_has_test();
  switch (from.test_case()) {
    case kField17: {
      set_field17(from.field17());
      break;
    }
    case kField18: {
      set_field18(from.field18());
      break;
    }
    case TEST_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:samples.common.AllTypes)
}

void AllTypes::SharedCtor() {
  string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, reinterpret_cast<char*>(&bool__) -
    reinterpret_cast<char*>(&timestamp_) + sizeof(bool__));
  clear_has_test();
  _cached_size_ = 0;
}

AllTypes::~AllTypes() {
  // @@protoc_insertion_point(destructor:samples.common.AllTypes)
  SharedDtor();
}

void AllTypes::SharedDtor() {
  string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete timestamp_;
  }
  if (this != internal_default_instance()) {
    delete duration_;
  }
  if (this != internal_default_instance()) {
    delete struct__;
  }
  if (has_test()) {
    clear_test();
  }
}

void AllTypes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllTypes::descriptor() {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AllTypes& AllTypes::default_instance() {
  protobuf_proto_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllTypes* AllTypes::New(::google::protobuf::Arena* arena) const {
  AllTypes* n = new AllTypes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllTypes::clear_test() {
// @@protoc_insertion_point(one_of_clear_start:samples.common.AllTypes)
  switch (test_case()) {
    case kField17: {
      test_.field17_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kField18: {
      // No need to clear
      break;
    }
    case TEST_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_NOT_SET;
}


void AllTypes::Clear() {
// @@protoc_insertion_point(message_clear_start:samples.common.AllTypes)
  repeat_string_.Clear();
  field19_.Clear();
  string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) {
    delete duration_;
  }
  duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && struct__ != NULL) {
    delete struct__;
  }
  struct__ = NULL;
  ::memset(&double__, 0, reinterpret_cast<char*>(&bool__) -
    reinterpret_cast<char*>(&double__) + sizeof(bool__));
  clear_test();
}

bool AllTypes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:samples.common.AllTypes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double double = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &double__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float float = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &float__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 int32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 int64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &int64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uint32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 uint64 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bool = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bool__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string string = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->string().data(), this->string().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "samples.common.AllTypes.string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string repeat_string = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_repeat_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->repeat_string(this->repeat_string_size() - 1).data(),
            this->repeat_string(this->repeat_string_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "samples.common.AllTypes.repeat_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes bytes = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string field17 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_field17()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->field17().data(), this->field17().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "samples.common.AllTypes.field17"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 field18 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u)) {
          clear_test();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &test_.field18_)));
          set_has_field18();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, int64> field19 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u)) {
          AllTypes_Field19Entry::Parser< ::google::protobuf::internal::MapField<
              AllTypes_Field19Entry,
              ::std::string, ::google::protobuf::int64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 > > parser(&field19_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), parser.key().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "samples.common.AllTypes.Field19Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Timestamp timestamp = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Duration duration = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .google.protobuf.Struct struct = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_struct_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:samples.common.AllTypes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:samples.common.AllTypes)
  return false;
#undef DO_
}

void AllTypes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:samples.common.AllTypes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double double = 1;
  if (this->double_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->double_(), output);
  }

  // float float = 2;
  if (this->float_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->float_(), output);
  }

  // int32 int32 = 3;
  if (this->int32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->int32(), output);
  }

  // int64 int64 = 4;
  if (this->int64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->int64(), output);
  }

  // uint32 uint32 = 5;
  if (this->uint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uint32(), output);
  }

  // uint64 uint64 = 6;
  if (this->uint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->uint64(), output);
  }

  // bool bool = 13;
  if (this->bool_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->bool_(), output);
  }

  // string string = 14;
  if (this->string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), this->string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.AllTypes.string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->string(), output);
  }

  // repeated string repeat_string = 15;
  for (int i = 0, n = this->repeat_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeat_string(i).data(), this->repeat_string(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.AllTypes.repeat_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->repeat_string(i), output);
  }

  // bytes bytes = 16;
  if (this->bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      16, this->bytes(), output);
  }

  // string field17 = 17;
  if (has_field17()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field17().data(), this->field17().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.AllTypes.field17");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->field17(), output);
  }

  // int64 field18 = 18;
  if (has_field18()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(18, this->field18(), output);
  }

  // map<string, int64> field19 = 19;
  if (!this->field19().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "samples.common.AllTypes.Field19Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->field19().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->field19().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->field19().begin();
          it != this->field19().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AllTypes_Field19Entry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(field19_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            19, *entry, output);
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AllTypes_Field19Entry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->field19().begin();
          it != this->field19().end(); ++it) {
        entry.reset(field19_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            19, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.protobuf.Timestamp timestamp = 20;
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->timestamp_, output);
  }

  // .google.protobuf.Duration duration = 21;
  if (this->has_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->duration_, output);
  }

  // .google.protobuf.Struct struct = 22;
  if (this->has_struct_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22, *this->struct__, output);
  }

  // @@protoc_insertion_point(serialize_end:samples.common.AllTypes)
}

::google::protobuf::uint8* AllTypes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:samples.common.AllTypes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double double = 1;
  if (this->double_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->double_(), target);
  }

  // float float = 2;
  if (this->float_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->float_(), target);
  }

  // int32 int32 = 3;
  if (this->int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->int32(), target);
  }

  // int64 int64 = 4;
  if (this->int64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->int64(), target);
  }

  // uint32 uint32 = 5;
  if (this->uint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uint32(), target);
  }

  // uint64 uint64 = 6;
  if (this->uint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->uint64(), target);
  }

  // bool bool = 13;
  if (this->bool_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->bool_(), target);
  }

  // string string = 14;
  if (this->string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->string().data(), this->string().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.AllTypes.string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->string(), target);
  }

  // repeated string repeat_string = 15;
  for (int i = 0, n = this->repeat_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->repeat_string(i).data(), this->repeat_string(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.AllTypes.repeat_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->repeat_string(i), target);
  }

  // bytes bytes = 16;
  if (this->bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        16, this->bytes(), target);
  }

  // string field17 = 17;
  if (has_field17()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->field17().data(), this->field17().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.AllTypes.field17");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->field17(), target);
  }

  // int64 field18 = 18;
  if (has_field18()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(18, this->field18(), target);
  }

  // map<string, int64> field19 = 19;
  if (!this->field19().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), p->first.length(),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "samples.common.AllTypes.Field19Entry.key");
      }
    };

    if (deterministic &&
        this->field19().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->field19().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->field19().begin();
          it != this->field19().end(); ++it, ++n) {
        items[n] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[n], Less());
      ::google::protobuf::scoped_ptr<AllTypes_Field19Entry> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(field19_.NewEntryWrapper(
            items[i]->first, items[i]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       19, *entry, deterministic, target);
;
        Utf8Check::Check(items[i]);
      }
    } else {
      ::google::protobuf::scoped_ptr<AllTypes_Field19Entry> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
          it = this->field19().begin();
          it != this->field19().end(); ++it) {
        entry.reset(field19_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       19, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .google.protobuf.Timestamp timestamp = 20;
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->timestamp_, deterministic, target);
  }

  // .google.protobuf.Duration duration = 21;
  if (this->has_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->duration_, deterministic, target);
  }

  // .google.protobuf.Struct struct = 22;
  if (this->has_struct_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        22, *this->struct__, deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:samples.common.AllTypes)
  return target;
}

size_t AllTypes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:samples.common.AllTypes)
  size_t total_size = 0;

  // repeated string repeat_string = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->repeat_string_size());
  for (int i = 0, n = this->repeat_string_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->repeat_string(i));
  }

  // map<string, int64> field19 = 19;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->field19_size());
  {
    ::google::protobuf::scoped_ptr<AllTypes_Field19Entry> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >::const_iterator
        it = this->field19().begin();
        it != this->field19().end(); ++it) {
      entry.reset(field19_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string string = 14;
  if (this->string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->string());
  }

  // bytes bytes = 16;
  if (this->bytes().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bytes());
  }

  // .google.protobuf.Timestamp timestamp = 20;
  if (this->has_timestamp()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->timestamp_);
  }

  // .google.protobuf.Duration duration = 21;
  if (this->has_duration()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->duration_);
  }

  // .google.protobuf.Struct struct = 22;
  if (this->has_struct_()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->struct__);
  }

  // double double = 1;
  if (this->double_() != 0) {
    total_size += 1 + 8;
  }

  // float float = 2;
  if (this->float_() != 0) {
    total_size += 1 + 4;
  }

  // int32 int32 = 3;
  if (this->int32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->int32());
  }

  // int64 int64 = 4;
  if (this->int64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->int64());
  }

  // uint64 uint64 = 6;
  if (this->uint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uint64());
  }

  // uint32 uint32 = 5;
  if (this->uint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uint32());
  }

  // bool bool = 13;
  if (this->bool_() != 0) {
    total_size += 1 + 1;
  }

  switch (test_case()) {
    // string field17 = 17;
    case kField17: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->field17());
      break;
    }
    // int64 field18 = 18;
    case kField18: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->field18());
      break;
    }
    case TEST_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllTypes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:samples.common.AllTypes)
  GOOGLE_DCHECK_NE(&from, this);
  const AllTypes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllTypes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:samples.common.AllTypes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:samples.common.AllTypes)
    MergeFrom(*source);
  }
}

void AllTypes::MergeFrom(const AllTypes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:samples.common.AllTypes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  repeat_string_.MergeFrom(from.repeat_string_);
  field19_.MergeFrom(from.field19_);
  if (from.string().size() > 0) {

    string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.string_);
  }
  if (from.bytes().size() > 0) {

    bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bytes_);
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::google::protobuf::Timestamp::MergeFrom(from.timestamp());
  }
  if (from.has_duration()) {
    mutable_duration()->::google::protobuf::Duration::MergeFrom(from.duration());
  }
  if (from.has_struct_()) {
    mutable_struct_()->::google::protobuf::Struct::MergeFrom(from.struct_());
  }
  if (from.double_() != 0) {
    set_double_(from.double_());
  }
  if (from.float_() != 0) {
    set_float_(from.float_());
  }
  if (from.int32() != 0) {
    set_int32(from.int32());
  }
  if (from.int64() != 0) {
    set_int64(from.int64());
  }
  if (from.uint64() != 0) {
    set_uint64(from.uint64());
  }
  if (from.uint32() != 0) {
    set_uint32(from.uint32());
  }
  if (from.bool_() != 0) {
    set_bool_(from.bool_());
  }
  switch (from.test_case()) {
    case kField17: {
      set_field17(from.field17());
      break;
    }
    case kField18: {
      set_field18(from.field18());
      break;
    }
    case TEST_NOT_SET: {
      break;
    }
  }
}

void AllTypes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:samples.common.AllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllTypes::CopyFrom(const AllTypes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:samples.common.AllTypes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllTypes::IsInitialized() const {
  return true;
}

void AllTypes::Swap(AllTypes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllTypes::InternalSwap(AllTypes* other) {
  repeat_string_.InternalSwap(&other->repeat_string_);
  field19_.Swap(&other->field19_);
  string_.Swap(&other->string_);
  bytes_.Swap(&other->bytes_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(duration_, other->duration_);
  std::swap(struct__, other->struct__);
  std::swap(double__, other->double__);
  std::swap(float__, other->float__);
  std::swap(int32_, other->int32_);
  std::swap(int64_, other->int64_);
  std::swap(uint64_, other->uint64_);
  std::swap(uint32_, other->uint32_);
  std::swap(bool__, other->bool__);
  std::swap(test_, other->test_);
  std::swap(_oneof_case_[0], other->_oneof_case_[0]);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllTypes::GetMetadata() const {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllTypes

// double double = 1;
void AllTypes::clear_double_() {
  double__ = 0;
}
double AllTypes::double_() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.double)
  return double__;
}
void AllTypes::set_double_(double value) {
  
  double__ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.double)
}

// float float = 2;
void AllTypes::clear_float_() {
  float__ = 0;
}
float AllTypes::float_() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.float)
  return float__;
}
void AllTypes::set_float_(float value) {
  
  float__ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.float)
}

// int32 int32 = 3;
void AllTypes::clear_int32() {
  int32_ = 0;
}
::google::protobuf::int32 AllTypes::int32() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.int32)
  return int32_;
}
void AllTypes::set_int32(::google::protobuf::int32 value) {
  
  int32_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.int32)
}

// int64 int64 = 4;
void AllTypes::clear_int64() {
  int64_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 AllTypes::int64() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.int64)
  return int64_;
}
void AllTypes::set_int64(::google::protobuf::int64 value) {
  
  int64_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.int64)
}

// uint32 uint32 = 5;
void AllTypes::clear_uint32() {
  uint32_ = 0u;
}
::google::protobuf::uint32 AllTypes::uint32() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.uint32)
  return uint32_;
}
void AllTypes::set_uint32(::google::protobuf::uint32 value) {
  
  uint32_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.uint32)
}

// uint64 uint64 = 6;
void AllTypes::clear_uint64() {
  uint64_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 AllTypes::uint64() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.uint64)
  return uint64_;
}
void AllTypes::set_uint64(::google::protobuf::uint64 value) {
  
  uint64_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.uint64)
}

// bool bool = 13;
void AllTypes::clear_bool_() {
  bool__ = false;
}
bool AllTypes::bool_() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.bool)
  return bool__;
}
void AllTypes::set_bool_(bool value) {
  
  bool__ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.bool)
}

// string string = 14;
void AllTypes::clear_string() {
  string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllTypes::string() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.string)
  return string_.GetNoArena();
}
void AllTypes::set_string(const ::std::string& value) {
  
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.string)
}
#if LANG_CXX11
void AllTypes::set_string(::std::string&& value) {
  
  string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.AllTypes.string)
}
#endif
void AllTypes::set_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.AllTypes.string)
}
void AllTypes::set_string(const char* value, size_t size) {
  
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.AllTypes.string)
}
::std::string* AllTypes::mutable_string() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.string)
  return string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllTypes::release_string() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.string)
  
  return string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllTypes::set_allocated_string(::std::string* string) {
  if (string != NULL) {
    
  } else {
    
  }
  string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string);
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.string)
}

// repeated string repeat_string = 15;
int AllTypes::repeat_string_size() const {
  return repeat_string_.size();
}
void AllTypes::clear_repeat_string() {
  repeat_string_.Clear();
}
const ::std::string& AllTypes::repeat_string(int index) const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.repeat_string)
  return repeat_string_.Get(index);
}
::std::string* AllTypes::mutable_repeat_string(int index) {
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.repeat_string)
  return repeat_string_.Mutable(index);
}
void AllTypes::set_repeat_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.repeat_string)
  repeat_string_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AllTypes::set_repeat_string(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.repeat_string)
  repeat_string_.Mutable(index)->assign(std::move(value));
}
#endif
void AllTypes::set_repeat_string(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeat_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:samples.common.AllTypes.repeat_string)
}
void AllTypes::set_repeat_string(int index, const char* value, size_t size) {
  repeat_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:samples.common.AllTypes.repeat_string)
}
::std::string* AllTypes::add_repeat_string() {
  // @@protoc_insertion_point(field_add_mutable:samples.common.AllTypes.repeat_string)
  return repeat_string_.Add();
}
void AllTypes::add_repeat_string(const ::std::string& value) {
  repeat_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:samples.common.AllTypes.repeat_string)
}
#if LANG_CXX11
void AllTypes::add_repeat_string(::std::string&& value) {
  repeat_string_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:samples.common.AllTypes.repeat_string)
}
#endif
void AllTypes::add_repeat_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeat_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:samples.common.AllTypes.repeat_string)
}
void AllTypes::add_repeat_string(const char* value, size_t size) {
  repeat_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:samples.common.AllTypes.repeat_string)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllTypes::repeat_string() const {
  // @@protoc_insertion_point(field_list:samples.common.AllTypes.repeat_string)
  return repeat_string_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AllTypes::mutable_repeat_string() {
  // @@protoc_insertion_point(field_mutable_list:samples.common.AllTypes.repeat_string)
  return &repeat_string_;
}

// bytes bytes = 16;
void AllTypes::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& AllTypes::bytes() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.bytes)
  return bytes_.GetNoArena();
}
void AllTypes::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.bytes)
}
#if LANG_CXX11
void AllTypes::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.AllTypes.bytes)
}
#endif
void AllTypes::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.AllTypes.bytes)
}
void AllTypes::set_bytes(const void* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.AllTypes.bytes)
}
::std::string* AllTypes::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllTypes::release_bytes() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AllTypes::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.bytes)
}

// string field17 = 17;
bool AllTypes::has_field17() const {
  return test_case() == kField17;
}
void AllTypes::set_has_field17() {
  _oneof_case_[0] = kField17;
}
void AllTypes::clear_field17() {
  if (has_field17()) {
    test_.field17_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_test();
  }
}
const ::std::string& AllTypes::field17() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.field17)
  if (has_field17()) {
    return test_.field17_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
void AllTypes::set_field17(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.field17)
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  test_.field17_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.field17)
}
#if LANG_CXX11
void AllTypes::set_field17(::std::string&& value) {
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.field17)
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  test_.field17_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.AllTypes.field17)
}
#endif
void AllTypes::set_field17(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  test_.field17_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.AllTypes.field17)
}
void AllTypes::set_field17(const char* value, size_t size) {
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  test_.field17_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.AllTypes.field17)
}
::std::string* AllTypes::mutable_field17() {
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.field17)
  return test_.field17_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AllTypes::release_field17() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.field17)
  if (has_field17()) {
    clear_has_test();
    return test_.field17_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
void AllTypes::set_allocated_field17(::std::string* field17) {
  if (!has_field17()) {
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_test();
  if (field17 != NULL) {
    set_has_field17();
    test_.field17_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        field17);
  }
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.field17)
}

// int64 field18 = 18;
bool AllTypes::has_field18() const {
  return test_case() == kField18;
}
void AllTypes::set_has_field18() {
  _oneof_case_[0] = kField18;
}
void AllTypes::clear_field18() {
  if (has_field18()) {
    test_.field18_ = GOOGLE_LONGLONG(0);
    clear_has_test();
  }
}
::google::protobuf::int64 AllTypes::field18() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.field18)
  if (has_field18()) {
    return test_.field18_;
  }
  return GOOGLE_LONGLONG(0);
}
void AllTypes::set_field18(::google::protobuf::int64 value) {
  if (!has_field18()) {
    clear_test();
    set_has_field18();
  }
  test_.field18_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.field18)
}

// map<string, int64> field19 = 19;
int AllTypes::field19_size() const {
  return field19_.size();
}
void AllTypes::clear_field19() {
  field19_.Clear();
}
 const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
AllTypes::field19() const {
  // @@protoc_insertion_point(field_map:samples.common.AllTypes.field19)
  return field19_.GetMap();
}
 ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
AllTypes::mutable_field19() {
  // @@protoc_insertion_point(field_mutable_map:samples.common.AllTypes.field19)
  return field19_.MutableMap();
}

// .google.protobuf.Timestamp timestamp = 20;
bool AllTypes::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
void AllTypes::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
const ::google::protobuf::Timestamp& AllTypes::timestamp() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.timestamp)
  return timestamp_ != NULL ? *timestamp_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
::google::protobuf::Timestamp* AllTypes::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.timestamp)
  return timestamp_;
}
::google::protobuf::Timestamp* AllTypes::release_timestamp() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
void AllTypes::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.timestamp)
}

// .google.protobuf.Duration duration = 21;
bool AllTypes::has_duration() const {
  return this != internal_default_instance() && duration_ != NULL;
}
void AllTypes::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) delete duration_;
  duration_ = NULL;
}
const ::google::protobuf::Duration& AllTypes::duration() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.duration)
  return duration_ != NULL ? *duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
::google::protobuf::Duration* AllTypes::mutable_duration() {
  
  if (duration_ == NULL) {
    duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.duration)
  return duration_;
}
::google::protobuf::Duration* AllTypes::release_duration() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.duration)
  
  ::google::protobuf::Duration* temp = duration_;
  duration_ = NULL;
  return temp;
}
void AllTypes::set_allocated_duration(::google::protobuf::Duration* duration) {
  delete duration_;
  if (duration != NULL && duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_duration = new ::google::protobuf::Duration;
    new_duration->CopyFrom(*duration);
    duration = new_duration;
  }
  duration_ = duration;
  if (duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.duration)
}

// .google.protobuf.Struct struct = 22;
bool AllTypes::has_struct_() const {
  return this != internal_default_instance() && struct__ != NULL;
}
void AllTypes::clear_struct_() {
  if (GetArenaNoVirtual() == NULL && struct__ != NULL) delete struct__;
  struct__ = NULL;
}
const ::google::protobuf::Struct& AllTypes::struct_() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.struct)
  return struct__ != NULL ? *struct__
                         : *::google::protobuf::Struct::internal_default_instance();
}
::google::protobuf::Struct* AllTypes::mutable_struct_() {
  
  if (struct__ == NULL) {
    struct__ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.struct)
  return struct__;
}
::google::protobuf::Struct* AllTypes::release_struct_() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.struct)
  
  ::google::protobuf::Struct* temp = struct__;
  struct__ = NULL;
  return temp;
}
void AllTypes::set_allocated_struct_(::google::protobuf::Struct* struct_) {
  delete struct__;
  if (struct_ != NULL && struct_->GetArena() != NULL) {
    ::google::protobuf::Struct* new_struct_ = new ::google::protobuf::Struct;
    new_struct_->CopyFrom(*struct_);
    struct_ = new_struct_;
  }
  struct__ = struct_;
  if (struct_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.struct)
}

bool AllTypes::has_test() const {
  return test_case() != TEST_NOT_SET;
}
void AllTypes::clear_has_test() {
  _oneof_case_[0] = TEST_NOT_SET;
}
AllTypes::TestCase AllTypes::test_case() const {
  return AllTypes::TestCase(_oneof_case_[0]);
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchRequest::kIdFieldNumber;
const int SearchRequest::kLogLevelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchRequest::SearchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:samples.common.SearchRequest)
}
SearchRequest::SearchRequest(const SearchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  log_level_ = from.log_level_;
  // @@protoc_insertion_point(copy_constructor:samples.common.SearchRequest)
}

void SearchRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_level_ = 0;
  _cached_size_ = 0;
}

SearchRequest::~SearchRequest() {
  // @@protoc_insertion_point(destructor:samples.common.SearchRequest)
  SharedDtor();
}

void SearchRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchRequest::descriptor() {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchRequest& SearchRequest::default_instance() {
  protobuf_proto_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchRequest* SearchRequest::New(::google::protobuf::Arena* arena) const {
  SearchRequest* n = new SearchRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:samples.common.SearchRequest)
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  log_level_ = 0;
}

bool SearchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:samples.common.SearchRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), this->id().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "samples.common.SearchRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .samples.common.Loglevel log_level = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_log_level(static_cast< ::samples::common::Loglevel >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:samples.common.SearchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:samples.common.SearchRequest)
  return false;
#undef DO_
}

void SearchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:samples.common.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.SearchRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .samples.common.Loglevel log_level = 2;
  if (this->log_level() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->log_level(), output);
  }

  // @@protoc_insertion_point(serialize_end:samples.common.SearchRequest)
}

::google::protobuf::uint8* SearchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:samples.common.SearchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), this->id().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.SearchRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .samples.common.Loglevel log_level = 2;
  if (this->log_level() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->log_level(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:samples.common.SearchRequest)
  return target;
}

size_t SearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:samples.common.SearchRequest)
  size_t total_size = 0;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .samples.common.Loglevel log_level = 2;
  if (this->log_level() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_level());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:samples.common.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:samples.common.SearchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:samples.common.SearchRequest)
    MergeFrom(*source);
  }
}

void SearchRequest::MergeFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:samples.common.SearchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.log_level() != 0) {
    set_log_level(from.log_level());
  }
}

void SearchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:samples.common.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchRequest::CopyFrom(const SearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:samples.common.SearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchRequest::IsInitialized() const {
  return true;
}

void SearchRequest::Swap(SearchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchRequest::InternalSwap(SearchRequest* other) {
  id_.Swap(&other->id_);
  std::swap(log_level_, other->log_level_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchRequest::GetMetadata() const {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchRequest

// string id = 1;
void SearchRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchRequest::id() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchRequest.id)
  return id_.GetNoArena();
}
void SearchRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.SearchRequest.id)
}
#if LANG_CXX11
void SearchRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.SearchRequest.id)
}
#endif
void SearchRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.SearchRequest.id)
}
void SearchRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.SearchRequest.id)
}
::std::string* SearchRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.SearchRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchRequest::release_id() {
  // @@protoc_insertion_point(field_release:samples.common.SearchRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:samples.common.SearchRequest.id)
}

// .samples.common.Loglevel log_level = 2;
void SearchRequest::clear_log_level() {
  log_level_ = 0;
}
::samples::common::Loglevel SearchRequest::log_level() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchRequest.log_level)
  return static_cast< ::samples::common::Loglevel >(log_level_);
}
void SearchRequest::set_log_level(::samples::common::Loglevel value) {
  
  log_level_ = value;
  // @@protoc_insertion_point(field_set:samples.common.SearchRequest.log_level)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResponse_Result::kUrlFieldNumber;
const int SearchResponse_Result::kTitleFieldNumber;
const int SearchResponse_Result::kSnippetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResponse_Result::SearchResponse_Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:samples.common.SearchResponse.Result)
}
SearchResponse_Result::SearchResponse_Result(const SearchResponse_Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  snippets_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.snippets().size() > 0) {
    snippets_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippets_);
  }
  // @@protoc_insertion_point(copy_constructor:samples.common.SearchResponse.Result)
}

void SearchResponse_Result::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippets_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

SearchResponse_Result::~SearchResponse_Result() {
  // @@protoc_insertion_point(destructor:samples.common.SearchResponse.Result)
  SharedDtor();
}

void SearchResponse_Result::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippets_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SearchResponse_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchResponse_Result::descriptor() {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResponse_Result& SearchResponse_Result::default_instance() {
  protobuf_proto_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchResponse_Result* SearchResponse_Result::New(::google::protobuf::Arena* arena) const {
  SearchResponse_Result* n = new SearchResponse_Result;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchResponse_Result::Clear() {
// @@protoc_insertion_point(message_clear_start:samples.common.SearchResponse.Result)
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  snippets_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool SearchResponse_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:samples.common.SearchResponse.Result)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string url = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), this->url().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "samples.common.SearchResponse.Result.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), this->title().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "samples.common.SearchResponse.Result.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string snippets = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_snippets()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->snippets().data(), this->snippets().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "samples.common.SearchResponse.Result.snippets"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:samples.common.SearchResponse.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:samples.common.SearchResponse.Result)
  return false;
#undef DO_
}

void SearchResponse_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:samples.common.SearchResponse.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.SearchResponse.Result.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->url(), output);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.SearchResponse.Result.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->title(), output);
  }

  // string snippets = 3;
  if (this->snippets().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snippets().data(), this->snippets().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.SearchResponse.Result.snippets");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->snippets(), output);
  }

  // @@protoc_insertion_point(serialize_end:samples.common.SearchResponse.Result)
}

::google::protobuf::uint8* SearchResponse_Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:samples.common.SearchResponse.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), this->url().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.SearchResponse.Result.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->url(), target);
  }

  // string title = 2;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), this->title().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.SearchResponse.Result.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->title(), target);
  }

  // string snippets = 3;
  if (this->snippets().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->snippets().data(), this->snippets().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "samples.common.SearchResponse.Result.snippets");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->snippets(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:samples.common.SearchResponse.Result)
  return target;
}

size_t SearchResponse_Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:samples.common.SearchResponse.Result)
  size_t total_size = 0;

  // string url = 1;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string title = 2;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string snippets = 3;
  if (this->snippets().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->snippets());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchResponse_Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:samples.common.SearchResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResponse_Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResponse_Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:samples.common.SearchResponse.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:samples.common.SearchResponse.Result)
    MergeFrom(*source);
  }
}

void SearchResponse_Result::MergeFrom(const SearchResponse_Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:samples.common.SearchResponse.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.snippets().size() > 0) {

    snippets_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.snippets_);
  }
}

void SearchResponse_Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:samples.common.SearchResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResponse_Result::CopyFrom(const SearchResponse_Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:samples.common.SearchResponse.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResponse_Result::IsInitialized() const {
  return true;
}

void SearchResponse_Result::Swap(SearchResponse_Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResponse_Result::InternalSwap(SearchResponse_Result* other) {
  url_.Swap(&other->url_);
  title_.Swap(&other->title_);
  snippets_.Swap(&other->snippets_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchResponse_Result::GetMetadata() const {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchResponse_Result

// string url = 1;
void SearchResponse_Result::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchResponse_Result::url() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchResponse.Result.url)
  return url_.GetNoArena();
}
void SearchResponse_Result::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.SearchResponse.Result.url)
}
#if LANG_CXX11
void SearchResponse_Result::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.SearchResponse.Result.url)
}
#endif
void SearchResponse_Result::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.SearchResponse.Result.url)
}
void SearchResponse_Result::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.SearchResponse.Result.url)
}
::std::string* SearchResponse_Result::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.SearchResponse.Result.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchResponse_Result::release_url() {
  // @@protoc_insertion_point(field_release:samples.common.SearchResponse.Result.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchResponse_Result::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:samples.common.SearchResponse.Result.url)
}

// string title = 2;
void SearchResponse_Result::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchResponse_Result::title() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchResponse.Result.title)
  return title_.GetNoArena();
}
void SearchResponse_Result::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.SearchResponse.Result.title)
}
#if LANG_CXX11
void SearchResponse_Result::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.SearchResponse.Result.title)
}
#endif
void SearchResponse_Result::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.SearchResponse.Result.title)
}
void SearchResponse_Result::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.SearchResponse.Result.title)
}
::std::string* SearchResponse_Result::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.SearchResponse.Result.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchResponse_Result::release_title() {
  // @@protoc_insertion_point(field_release:samples.common.SearchResponse.Result.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchResponse_Result::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:samples.common.SearchResponse.Result.title)
}

// string snippets = 3;
void SearchResponse_Result::clear_snippets() {
  snippets_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SearchResponse_Result::snippets() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchResponse.Result.snippets)
  return snippets_.GetNoArena();
}
void SearchResponse_Result::set_snippets(const ::std::string& value) {
  
  snippets_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.SearchResponse.Result.snippets)
}
#if LANG_CXX11
void SearchResponse_Result::set_snippets(::std::string&& value) {
  
  snippets_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.SearchResponse.Result.snippets)
}
#endif
void SearchResponse_Result::set_snippets(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  snippets_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.SearchResponse.Result.snippets)
}
void SearchResponse_Result::set_snippets(const char* value, size_t size) {
  
  snippets_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.SearchResponse.Result.snippets)
}
::std::string* SearchResponse_Result::mutable_snippets() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.SearchResponse.Result.snippets)
  return snippets_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SearchResponse_Result::release_snippets() {
  // @@protoc_insertion_point(field_release:samples.common.SearchResponse.Result.snippets)
  
  return snippets_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SearchResponse_Result::set_allocated_snippets(::std::string* snippets) {
  if (snippets != NULL) {
    
  } else {
    
  }
  snippets_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snippets);
  // @@protoc_insertion_point(field_set_allocated:samples.common.SearchResponse.Result.snippets)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchResponse::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchResponse::SearchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_proto_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:samples.common.SearchResponse)
}
SearchResponse::SearchResponse(const SearchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      results_(from.results_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:samples.common.SearchResponse)
}

void SearchResponse::SharedCtor() {
  _cached_size_ = 0;
}

SearchResponse::~SearchResponse() {
  // @@protoc_insertion_point(destructor:samples.common.SearchResponse)
  SharedDtor();
}

void SearchResponse::SharedDtor() {
}

void SearchResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SearchResponse::descriptor() {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchResponse& SearchResponse::default_instance() {
  protobuf_proto_2eproto::InitDefaults();
  return *internal_default_instance();
}

SearchResponse* SearchResponse::New(::google::protobuf::Arena* arena) const {
  SearchResponse* n = new SearchResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:samples.common.SearchResponse)
  results_.Clear();
}

bool SearchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:samples.common.SearchResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .samples.common.SearchResponse.Result results = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:samples.common.SearchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:samples.common.SearchResponse)
  return false;
#undef DO_
}

void SearchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:samples.common.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .samples.common.SearchResponse.Result results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  // @@protoc_insertion_point(serialize_end:samples.common.SearchResponse)
}

::google::protobuf::uint8* SearchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:samples.common.SearchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .samples.common.SearchResponse.Result results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->results(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:samples.common.SearchResponse)
  return target;
}

size_t SearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:samples.common.SearchResponse)
  size_t total_size = 0;

  // repeated .samples.common.SearchResponse.Result results = 1;
  {
    unsigned int count = this->results_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SearchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:samples.common.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:samples.common.SearchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:samples.common.SearchResponse)
    MergeFrom(*source);
  }
}

void SearchResponse::MergeFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:samples.common.SearchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  results_.MergeFrom(from.results_);
}

void SearchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:samples.common.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchResponse::CopyFrom(const SearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:samples.common.SearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchResponse::IsInitialized() const {
  return true;
}

void SearchResponse::Swap(SearchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchResponse::InternalSwap(SearchResponse* other) {
  results_.InternalSwap(&other->results_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SearchResponse::GetMetadata() const {
  protobuf_proto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_proto_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SearchResponse

// repeated .samples.common.SearchResponse.Result results = 1;
int SearchResponse::results_size() const {
  return results_.size();
}
void SearchResponse::clear_results() {
  results_.Clear();
}
const ::samples::common::SearchResponse_Result& SearchResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:samples.common.SearchResponse.results)
  return results_.Get(index);
}
::samples::common::SearchResponse_Result* SearchResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:samples.common.SearchResponse.results)
  return results_.Mutable(index);
}
::samples::common::SearchResponse_Result* SearchResponse::add_results() {
  // @@protoc_insertion_point(field_add:samples.common.SearchResponse.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::samples::common::SearchResponse_Result >*
SearchResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:samples.common.SearchResponse.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::samples::common::SearchResponse_Result >&
SearchResponse::results() const {
  // @@protoc_insertion_point(field_list:samples.common.SearchResponse.results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace samples

// @@protoc_insertion_point(global_scope)
