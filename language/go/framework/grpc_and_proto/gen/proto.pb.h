// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto.proto

#ifndef PROTOBUF_proto_2eproto__INCLUDED
#define PROTOBUF_proto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include <google/protobuf/timestamp.pb.h>
#include <google/protobuf/struct.pb.h>
#include <google/protobuf/duration.pb.h>
#include "google/api/annotations.pb.h"
#include "protoc-gen-swagger/options/annotations.pb.h"
// @@protoc_insertion_point(includes)
namespace google {
namespace api {
}  // namespace api
namespace protobuf {
class Duration;
class DurationDefaultTypeInternal;
extern DurationDefaultTypeInternal _Duration_default_instance_;
class ListValue;
class ListValueDefaultTypeInternal;
extern ListValueDefaultTypeInternal _ListValue_default_instance_;
class Struct;
class StructDefaultTypeInternal;
extern StructDefaultTypeInternal _Struct_default_instance_;
class Struct_FieldsEntry;
class Struct_FieldsEntryDefaultTypeInternal;
extern Struct_FieldsEntryDefaultTypeInternal _Struct_FieldsEntry_default_instance_;
class Timestamp;
class TimestampDefaultTypeInternal;
extern TimestampDefaultTypeInternal _Timestamp_default_instance_;
class Value;
class ValueDefaultTypeInternal;
extern ValueDefaultTypeInternal _Value_default_instance_;
}  // namespace protobuf
}  // namespace google
namespace grpc {
namespace gateway {
namespace protoc_gen_swagger {
namespace options {
}  // namespace options
}  // namespace protoc_gen_swagger
}  // namespace gateway
}  // namespace grpc
namespace samples {
namespace common {
class AllTypes;
class AllTypesDefaultTypeInternal;
extern AllTypesDefaultTypeInternal _AllTypes_default_instance_;
class AllTypes_Field19Entry;
class AllTypes_Field19EntryDefaultTypeInternal;
extern AllTypes_Field19EntryDefaultTypeInternal _AllTypes_Field19Entry_default_instance_;
class SearchRequest;
class SearchRequestDefaultTypeInternal;
extern SearchRequestDefaultTypeInternal _SearchRequest_default_instance_;
class SearchResponse;
class SearchResponseDefaultTypeInternal;
extern SearchResponseDefaultTypeInternal _SearchResponse_default_instance_;
class SearchResponse_Result;
class SearchResponse_ResultDefaultTypeInternal;
extern SearchResponse_ResultDefaultTypeInternal _SearchResponse_Result_default_instance_;
}  // namespace common
}  // namespace samples

namespace samples {
namespace common {

namespace protobuf_proto_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_proto_2eproto

enum Loglevel {
  UNKNOWM = 0,
  DEBUG = 1,
  INFO = 2,
  WARN = 3,
  ERROR = 4,
  Loglevel_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Loglevel_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Loglevel_IsValid(int value);
const Loglevel Loglevel_MIN = UNKNOWM;
const Loglevel Loglevel_MAX = ERROR;
const int Loglevel_ARRAYSIZE = Loglevel_MAX + 1;

const ::google::protobuf::EnumDescriptor* Loglevel_descriptor();
inline const ::std::string& Loglevel_Name(Loglevel value) {
  return ::google::protobuf::internal::NameOfEnum(
    Loglevel_descriptor(), value);
}
inline bool Loglevel_Parse(
    const ::std::string& name, Loglevel* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Loglevel>(
    Loglevel_descriptor(), name, value);
}
// ===================================================================


// -------------------------------------------------------------------

class AllTypes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:samples.common.AllTypes) */ {
 public:
  AllTypes();
  virtual ~AllTypes();

  AllTypes(const AllTypes& from);

  inline AllTypes& operator=(const AllTypes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllTypes& default_instance();

  enum TestCase {
    kField17 = 17,
    kField18 = 18,
    TEST_NOT_SET = 0,
  };

  static inline const AllTypes* internal_default_instance() {
    return reinterpret_cast<const AllTypes*>(
               &_AllTypes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(AllTypes* other);

  // implements Message ----------------------------------------------

  inline AllTypes* New() const PROTOBUF_FINAL { return New(NULL); }

  AllTypes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllTypes& from);
  void MergeFrom(const AllTypes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllTypes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // repeated string repeat_string = 15;
  int repeat_string_size() const;
  void clear_repeat_string();
  static const int kRepeatStringFieldNumber = 15;
  const ::std::string& repeat_string(int index) const;
  ::std::string* mutable_repeat_string(int index);
  void set_repeat_string(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_repeat_string(int index, ::std::string&& value);
  #endif
  void set_repeat_string(int index, const char* value);
  void set_repeat_string(int index, const char* value, size_t size);
  ::std::string* add_repeat_string();
  void add_repeat_string(const ::std::string& value);
  #if LANG_CXX11
  void add_repeat_string(::std::string&& value);
  #endif
  void add_repeat_string(const char* value);
  void add_repeat_string(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& repeat_string() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_repeat_string();

  // map<string, int64> field19 = 19;
  int field19_size() const;
  void clear_field19();
  static const int kField19FieldNumber = 19;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
      field19() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
      mutable_field19();

  // string string = 14;
  void clear_string();
  static const int kStringFieldNumber = 14;
  const ::std::string& string() const;
  void set_string(const ::std::string& value);
  #if LANG_CXX11
  void set_string(::std::string&& value);
  #endif
  void set_string(const char* value);
  void set_string(const char* value, size_t size);
  ::std::string* mutable_string();
  ::std::string* release_string();
  void set_allocated_string(::std::string* string);

  // bytes bytes = 16;
  void clear_bytes();
  static const int kBytesFieldNumber = 16;
  const ::std::string& bytes() const;
  void set_bytes(const ::std::string& value);
  #if LANG_CXX11
  void set_bytes(::std::string&& value);
  #endif
  void set_bytes(const char* value);
  void set_bytes(const void* value, size_t size);
  ::std::string* mutable_bytes();
  ::std::string* release_bytes();
  void set_allocated_bytes(::std::string* bytes);

  // .google.protobuf.Timestamp timestamp = 20;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 20;
  const ::google::protobuf::Timestamp& timestamp() const;
  ::google::protobuf::Timestamp* mutable_timestamp();
  ::google::protobuf::Timestamp* release_timestamp();
  void set_allocated_timestamp(::google::protobuf::Timestamp* timestamp);

  // .google.protobuf.Duration duration = 21;
  bool has_duration() const;
  void clear_duration();
  static const int kDurationFieldNumber = 21;
  const ::google::protobuf::Duration& duration() const;
  ::google::protobuf::Duration* mutable_duration();
  ::google::protobuf::Duration* release_duration();
  void set_allocated_duration(::google::protobuf::Duration* duration);

  // .google.protobuf.Struct struct = 22;
  bool has_struct_() const;
  void clear_struct_();
  static const int kStructFieldNumber = 22;
  const ::google::protobuf::Struct& struct_() const;
  ::google::protobuf::Struct* mutable_struct_();
  ::google::protobuf::Struct* release_struct_();
  void set_allocated_struct_(::google::protobuf::Struct* struct_);

  // double double = 1;
  void clear_double_();
  static const int kDoubleFieldNumber = 1;
  double double_() const;
  void set_double_(double value);

  // float float = 2;
  void clear_float_();
  static const int kFloatFieldNumber = 2;
  float float_() const;
  void set_float_(float value);

  // int32 int32 = 3;
  void clear_int32();
  static const int kInt32FieldNumber = 3;
  ::google::protobuf::int32 int32() const;
  void set_int32(::google::protobuf::int32 value);

  // int64 int64 = 4;
  void clear_int64();
  static const int kInt64FieldNumber = 4;
  ::google::protobuf::int64 int64() const;
  void set_int64(::google::protobuf::int64 value);

  // uint64 uint64 = 6;
  void clear_uint64();
  static const int kUint64FieldNumber = 6;
  ::google::protobuf::uint64 uint64() const;
  void set_uint64(::google::protobuf::uint64 value);

  // uint32 uint32 = 5;
  void clear_uint32();
  static const int kUint32FieldNumber = 5;
  ::google::protobuf::uint32 uint32() const;
  void set_uint32(::google::protobuf::uint32 value);

  // bool bool = 13;
  void clear_bool_();
  static const int kBoolFieldNumber = 13;
  bool bool_() const;
  void set_bool_(bool value);

  // string field17 = 17;
  private:
  bool has_field17() const;
  public:
  void clear_field17();
  static const int kField17FieldNumber = 17;
  const ::std::string& field17() const;
  void set_field17(const ::std::string& value);
  #if LANG_CXX11
  void set_field17(::std::string&& value);
  #endif
  void set_field17(const char* value);
  void set_field17(const char* value, size_t size);
  ::std::string* mutable_field17();
  ::std::string* release_field17();
  void set_allocated_field17(::std::string* field17);

  // int64 field18 = 18;
  private:
  bool has_field18() const;
  public:
  void clear_field18();
  static const int kField18FieldNumber = 18;
  ::google::protobuf::int64 field18() const;
  void set_field18(::google::protobuf::int64 value);

  TestCase test_case() const;
  // @@protoc_insertion_point(class_scope:samples.common.AllTypes)
 private:
  void set_has_field17();
  void set_has_field18();

  inline bool has_test() const;
  void clear_test();
  inline void clear_has_test();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> repeat_string_;
  public:
  class AllTypes_Field19Entry : public ::google::protobuf::internal::MapEntry<AllTypes_Field19Entry, 
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<AllTypes_Field19Entry, 
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > SuperType;
    AllTypes_Field19Entry();
    AllTypes_Field19Entry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const AllTypes_Field19Entry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_AllTypes_Field19Entry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  ::google::protobuf::internal::MapField<
      AllTypes_Field19Entry,
      ::std::string, ::google::protobuf::int64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT64,
      0 > field19_;
  private:
  ::google::protobuf::internal::ArenaStringPtr string_;
  ::google::protobuf::internal::ArenaStringPtr bytes_;
  ::google::protobuf::Timestamp* timestamp_;
  ::google::protobuf::Duration* duration_;
  ::google::protobuf::Struct* struct__;
  double double__;
  float float__;
  ::google::protobuf::int32 int32_;
  ::google::protobuf::int64 int64_;
  ::google::protobuf::uint64 uint64_;
  ::google::protobuf::uint32 uint32_;
  bool bool__;
  union TestUnion {
    TestUnion() {}
    ::google::protobuf::internal::ArenaStringPtr field17_;
    ::google::protobuf::int64 field18_;
  } test_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:samples.common.SearchRequest) */ {
 public:
  SearchRequest();
  virtual ~SearchRequest();

  SearchRequest(const SearchRequest& from);

  inline SearchRequest& operator=(const SearchRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchRequest& default_instance();

  static inline const SearchRequest* internal_default_instance() {
    return reinterpret_cast<const SearchRequest*>(
               &_SearchRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SearchRequest* other);

  // implements Message ----------------------------------------------

  inline SearchRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchRequest& from);
  void MergeFrom(const SearchRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .samples.common.Loglevel log_level = 2;
  void clear_log_level();
  static const int kLogLevelFieldNumber = 2;
  ::samples::common::Loglevel log_level() const;
  void set_log_level(::samples::common::Loglevel value);

  // @@protoc_insertion_point(class_scope:samples.common.SearchRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  int log_level_;
  mutable int _cached_size_;
  friend struct protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchResponse_Result : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:samples.common.SearchResponse.Result) */ {
 public:
  SearchResponse_Result();
  virtual ~SearchResponse_Result();

  SearchResponse_Result(const SearchResponse_Result& from);

  inline SearchResponse_Result& operator=(const SearchResponse_Result& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResponse_Result& default_instance();

  static inline const SearchResponse_Result* internal_default_instance() {
    return reinterpret_cast<const SearchResponse_Result*>(
               &_SearchResponse_Result_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SearchResponse_Result* other);

  // implements Message ----------------------------------------------

  inline SearchResponse_Result* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResponse_Result* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResponse_Result& from);
  void MergeFrom(const SearchResponse_Result& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResponse_Result* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // string title = 2;
  void clear_title();
  static const int kTitleFieldNumber = 2;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const char* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // string snippets = 3;
  void clear_snippets();
  static const int kSnippetsFieldNumber = 3;
  const ::std::string& snippets() const;
  void set_snippets(const ::std::string& value);
  #if LANG_CXX11
  void set_snippets(::std::string&& value);
  #endif
  void set_snippets(const char* value);
  void set_snippets(const char* value, size_t size);
  ::std::string* mutable_snippets();
  ::std::string* release_snippets();
  void set_allocated_snippets(::std::string* snippets);

  // @@protoc_insertion_point(class_scope:samples.common.SearchResponse.Result)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr snippets_;
  mutable int _cached_size_;
  friend struct protobuf_proto_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SearchResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:samples.common.SearchResponse) */ {
 public:
  SearchResponse();
  virtual ~SearchResponse();

  SearchResponse(const SearchResponse& from);

  inline SearchResponse& operator=(const SearchResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SearchResponse& default_instance();

  static inline const SearchResponse* internal_default_instance() {
    return reinterpret_cast<const SearchResponse*>(
               &_SearchResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(SearchResponse* other);

  // implements Message ----------------------------------------------

  inline SearchResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SearchResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SearchResponse& from);
  void MergeFrom(const SearchResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SearchResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef SearchResponse_Result Result;

  // accessors -------------------------------------------------------

  // repeated .samples.common.SearchResponse.Result results = 1;
  int results_size() const;
  void clear_results();
  static const int kResultsFieldNumber = 1;
  const ::samples::common::SearchResponse_Result& results(int index) const;
  ::samples::common::SearchResponse_Result* mutable_results(int index);
  ::samples::common::SearchResponse_Result* add_results();
  ::google::protobuf::RepeatedPtrField< ::samples::common::SearchResponse_Result >*
      mutable_results();
  const ::google::protobuf::RepeatedPtrField< ::samples::common::SearchResponse_Result >&
      results() const;

  // @@protoc_insertion_point(class_scope:samples.common.SearchResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::samples::common::SearchResponse_Result > results_;
  mutable int _cached_size_;
  friend struct protobuf_proto_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// AllTypes

// double double = 1;
inline void AllTypes::clear_double_() {
  double__ = 0;
}
inline double AllTypes::double_() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.double)
  return double__;
}
inline void AllTypes::set_double_(double value) {
  
  double__ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.double)
}

// float float = 2;
inline void AllTypes::clear_float_() {
  float__ = 0;
}
inline float AllTypes::float_() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.float)
  return float__;
}
inline void AllTypes::set_float_(float value) {
  
  float__ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.float)
}

// int32 int32 = 3;
inline void AllTypes::clear_int32() {
  int32_ = 0;
}
inline ::google::protobuf::int32 AllTypes::int32() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.int32)
  return int32_;
}
inline void AllTypes::set_int32(::google::protobuf::int32 value) {
  
  int32_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.int32)
}

// int64 int64 = 4;
inline void AllTypes::clear_int64() {
  int64_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AllTypes::int64() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.int64)
  return int64_;
}
inline void AllTypes::set_int64(::google::protobuf::int64 value) {
  
  int64_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.int64)
}

// uint32 uint32 = 5;
inline void AllTypes::clear_uint32() {
  uint32_ = 0u;
}
inline ::google::protobuf::uint32 AllTypes::uint32() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.uint32)
  return uint32_;
}
inline void AllTypes::set_uint32(::google::protobuf::uint32 value) {
  
  uint32_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.uint32)
}

// uint64 uint64 = 6;
inline void AllTypes::clear_uint64() {
  uint64_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 AllTypes::uint64() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.uint64)
  return uint64_;
}
inline void AllTypes::set_uint64(::google::protobuf::uint64 value) {
  
  uint64_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.uint64)
}

// bool bool = 13;
inline void AllTypes::clear_bool_() {
  bool__ = false;
}
inline bool AllTypes::bool_() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.bool)
  return bool__;
}
inline void AllTypes::set_bool_(bool value) {
  
  bool__ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.bool)
}

// string string = 14;
inline void AllTypes::clear_string() {
  string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllTypes::string() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.string)
  return string_.GetNoArena();
}
inline void AllTypes::set_string(const ::std::string& value) {
  
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.string)
}
#if LANG_CXX11
inline void AllTypes::set_string(::std::string&& value) {
  
  string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.AllTypes.string)
}
#endif
inline void AllTypes::set_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.AllTypes.string)
}
inline void AllTypes::set_string(const char* value, size_t size) {
  
  string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.AllTypes.string)
}
inline ::std::string* AllTypes::mutable_string() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.string)
  return string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllTypes::release_string() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.string)
  
  return string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllTypes::set_allocated_string(::std::string* string) {
  if (string != NULL) {
    
  } else {
    
  }
  string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), string);
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.string)
}

// repeated string repeat_string = 15;
inline int AllTypes::repeat_string_size() const {
  return repeat_string_.size();
}
inline void AllTypes::clear_repeat_string() {
  repeat_string_.Clear();
}
inline const ::std::string& AllTypes::repeat_string(int index) const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.repeat_string)
  return repeat_string_.Get(index);
}
inline ::std::string* AllTypes::mutable_repeat_string(int index) {
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.repeat_string)
  return repeat_string_.Mutable(index);
}
inline void AllTypes::set_repeat_string(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.repeat_string)
  repeat_string_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AllTypes::set_repeat_string(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.repeat_string)
  repeat_string_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AllTypes::set_repeat_string(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeat_string_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:samples.common.AllTypes.repeat_string)
}
inline void AllTypes::set_repeat_string(int index, const char* value, size_t size) {
  repeat_string_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:samples.common.AllTypes.repeat_string)
}
inline ::std::string* AllTypes::add_repeat_string() {
  // @@protoc_insertion_point(field_add_mutable:samples.common.AllTypes.repeat_string)
  return repeat_string_.Add();
}
inline void AllTypes::add_repeat_string(const ::std::string& value) {
  repeat_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:samples.common.AllTypes.repeat_string)
}
#if LANG_CXX11
inline void AllTypes::add_repeat_string(::std::string&& value) {
  repeat_string_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:samples.common.AllTypes.repeat_string)
}
#endif
inline void AllTypes::add_repeat_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  repeat_string_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:samples.common.AllTypes.repeat_string)
}
inline void AllTypes::add_repeat_string(const char* value, size_t size) {
  repeat_string_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:samples.common.AllTypes.repeat_string)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllTypes::repeat_string() const {
  // @@protoc_insertion_point(field_list:samples.common.AllTypes.repeat_string)
  return repeat_string_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AllTypes::mutable_repeat_string() {
  // @@protoc_insertion_point(field_mutable_list:samples.common.AllTypes.repeat_string)
  return &repeat_string_;
}

// bytes bytes = 16;
inline void AllTypes::clear_bytes() {
  bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AllTypes::bytes() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.bytes)
  return bytes_.GetNoArena();
}
inline void AllTypes::set_bytes(const ::std::string& value) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.bytes)
}
#if LANG_CXX11
inline void AllTypes::set_bytes(::std::string&& value) {
  
  bytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.AllTypes.bytes)
}
#endif
inline void AllTypes::set_bytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.AllTypes.bytes)
}
inline void AllTypes::set_bytes(const void* value, size_t size) {
  
  bytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.AllTypes.bytes)
}
inline ::std::string* AllTypes::mutable_bytes() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.bytes)
  return bytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllTypes::release_bytes() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.bytes)
  
  return bytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AllTypes::set_allocated_bytes(::std::string* bytes) {
  if (bytes != NULL) {
    
  } else {
    
  }
  bytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bytes);
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.bytes)
}

// string field17 = 17;
inline bool AllTypes::has_field17() const {
  return test_case() == kField17;
}
inline void AllTypes::set_has_field17() {
  _oneof_case_[0] = kField17;
}
inline void AllTypes::clear_field17() {
  if (has_field17()) {
    test_.field17_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_test();
  }
}
inline const ::std::string& AllTypes::field17() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.field17)
  if (has_field17()) {
    return test_.field17_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void AllTypes::set_field17(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.field17)
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  test_.field17_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.field17)
}
#if LANG_CXX11
inline void AllTypes::set_field17(::std::string&& value) {
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.field17)
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  test_.field17_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.AllTypes.field17)
}
#endif
inline void AllTypes::set_field17(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  test_.field17_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.AllTypes.field17)
}
inline void AllTypes::set_field17(const char* value, size_t size) {
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  test_.field17_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.AllTypes.field17)
}
inline ::std::string* AllTypes::mutable_field17() {
  if (!has_field17()) {
    clear_test();
    set_has_field17();
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.field17)
  return test_.field17_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AllTypes::release_field17() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.field17)
  if (has_field17()) {
    clear_has_test();
    return test_.field17_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void AllTypes::set_allocated_field17(::std::string* field17) {
  if (!has_field17()) {
    test_.field17_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_test();
  if (field17 != NULL) {
    set_has_field17();
    test_.field17_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        field17);
  }
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.field17)
}

// int64 field18 = 18;
inline bool AllTypes::has_field18() const {
  return test_case() == kField18;
}
inline void AllTypes::set_has_field18() {
  _oneof_case_[0] = kField18;
}
inline void AllTypes::clear_field18() {
  if (has_field18()) {
    test_.field18_ = GOOGLE_LONGLONG(0);
    clear_has_test();
  }
}
inline ::google::protobuf::int64 AllTypes::field18() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.field18)
  if (has_field18()) {
    return test_.field18_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void AllTypes::set_field18(::google::protobuf::int64 value) {
  if (!has_field18()) {
    clear_test();
    set_has_field18();
  }
  test_.field18_ = value;
  // @@protoc_insertion_point(field_set:samples.common.AllTypes.field18)
}

// map<string, int64> field19 = 19;
inline int AllTypes::field19_size() const {
  return field19_.size();
}
inline void AllTypes::clear_field19() {
  field19_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >&
AllTypes::field19() const {
  // @@protoc_insertion_point(field_map:samples.common.AllTypes.field19)
  return field19_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::int64 >*
AllTypes::mutable_field19() {
  // @@protoc_insertion_point(field_mutable_map:samples.common.AllTypes.field19)
  return field19_.MutableMap();
}

// .google.protobuf.Timestamp timestamp = 20;
inline bool AllTypes::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline void AllTypes::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) delete timestamp_;
  timestamp_ = NULL;
}
inline const ::google::protobuf::Timestamp& AllTypes::timestamp() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.timestamp)
  return timestamp_ != NULL ? *timestamp_
                         : *::google::protobuf::Timestamp::internal_default_instance();
}
inline ::google::protobuf::Timestamp* AllTypes::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::google::protobuf::Timestamp;
  }
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.timestamp)
  return timestamp_;
}
inline ::google::protobuf::Timestamp* AllTypes::release_timestamp() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.timestamp)
  
  ::google::protobuf::Timestamp* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline void AllTypes::set_allocated_timestamp(::google::protobuf::Timestamp* timestamp) {
  delete timestamp_;
  if (timestamp != NULL && timestamp->GetArena() != NULL) {
    ::google::protobuf::Timestamp* new_timestamp = new ::google::protobuf::Timestamp;
    new_timestamp->CopyFrom(*timestamp);
    timestamp = new_timestamp;
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.timestamp)
}

// .google.protobuf.Duration duration = 21;
inline bool AllTypes::has_duration() const {
  return this != internal_default_instance() && duration_ != NULL;
}
inline void AllTypes::clear_duration() {
  if (GetArenaNoVirtual() == NULL && duration_ != NULL) delete duration_;
  duration_ = NULL;
}
inline const ::google::protobuf::Duration& AllTypes::duration() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.duration)
  return duration_ != NULL ? *duration_
                         : *::google::protobuf::Duration::internal_default_instance();
}
inline ::google::protobuf::Duration* AllTypes::mutable_duration() {
  
  if (duration_ == NULL) {
    duration_ = new ::google::protobuf::Duration;
  }
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.duration)
  return duration_;
}
inline ::google::protobuf::Duration* AllTypes::release_duration() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.duration)
  
  ::google::protobuf::Duration* temp = duration_;
  duration_ = NULL;
  return temp;
}
inline void AllTypes::set_allocated_duration(::google::protobuf::Duration* duration) {
  delete duration_;
  if (duration != NULL && duration->GetArena() != NULL) {
    ::google::protobuf::Duration* new_duration = new ::google::protobuf::Duration;
    new_duration->CopyFrom(*duration);
    duration = new_duration;
  }
  duration_ = duration;
  if (duration) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.duration)
}

// .google.protobuf.Struct struct = 22;
inline bool AllTypes::has_struct_() const {
  return this != internal_default_instance() && struct__ != NULL;
}
inline void AllTypes::clear_struct_() {
  if (GetArenaNoVirtual() == NULL && struct__ != NULL) delete struct__;
  struct__ = NULL;
}
inline const ::google::protobuf::Struct& AllTypes::struct_() const {
  // @@protoc_insertion_point(field_get:samples.common.AllTypes.struct)
  return struct__ != NULL ? *struct__
                         : *::google::protobuf::Struct::internal_default_instance();
}
inline ::google::protobuf::Struct* AllTypes::mutable_struct_() {
  
  if (struct__ == NULL) {
    struct__ = new ::google::protobuf::Struct;
  }
  // @@protoc_insertion_point(field_mutable:samples.common.AllTypes.struct)
  return struct__;
}
inline ::google::protobuf::Struct* AllTypes::release_struct_() {
  // @@protoc_insertion_point(field_release:samples.common.AllTypes.struct)
  
  ::google::protobuf::Struct* temp = struct__;
  struct__ = NULL;
  return temp;
}
inline void AllTypes::set_allocated_struct_(::google::protobuf::Struct* struct_) {
  delete struct__;
  if (struct_ != NULL && struct_->GetArena() != NULL) {
    ::google::protobuf::Struct* new_struct_ = new ::google::protobuf::Struct;
    new_struct_->CopyFrom(*struct_);
    struct_ = new_struct_;
  }
  struct__ = struct_;
  if (struct_) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:samples.common.AllTypes.struct)
}

inline bool AllTypes::has_test() const {
  return test_case() != TEST_NOT_SET;
}
inline void AllTypes::clear_has_test() {
  _oneof_case_[0] = TEST_NOT_SET;
}
inline AllTypes::TestCase AllTypes::test_case() const {
  return AllTypes::TestCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// SearchRequest

// string id = 1;
inline void SearchRequest::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchRequest::id() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchRequest.id)
  return id_.GetNoArena();
}
inline void SearchRequest::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.SearchRequest.id)
}
#if LANG_CXX11
inline void SearchRequest::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.SearchRequest.id)
}
#endif
inline void SearchRequest::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.SearchRequest.id)
}
inline void SearchRequest::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.SearchRequest.id)
}
inline ::std::string* SearchRequest::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.SearchRequest.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchRequest::release_id() {
  // @@protoc_insertion_point(field_release:samples.common.SearchRequest.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchRequest::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:samples.common.SearchRequest.id)
}

// .samples.common.Loglevel log_level = 2;
inline void SearchRequest::clear_log_level() {
  log_level_ = 0;
}
inline ::samples::common::Loglevel SearchRequest::log_level() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchRequest.log_level)
  return static_cast< ::samples::common::Loglevel >(log_level_);
}
inline void SearchRequest::set_log_level(::samples::common::Loglevel value) {
  
  log_level_ = value;
  // @@protoc_insertion_point(field_set:samples.common.SearchRequest.log_level)
}

// -------------------------------------------------------------------

// SearchResponse_Result

// string url = 1;
inline void SearchResponse_Result::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchResponse_Result::url() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchResponse.Result.url)
  return url_.GetNoArena();
}
inline void SearchResponse_Result::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.SearchResponse.Result.url)
}
#if LANG_CXX11
inline void SearchResponse_Result::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.SearchResponse.Result.url)
}
#endif
inline void SearchResponse_Result::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.SearchResponse.Result.url)
}
inline void SearchResponse_Result::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.SearchResponse.Result.url)
}
inline ::std::string* SearchResponse_Result::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.SearchResponse.Result.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchResponse_Result::release_url() {
  // @@protoc_insertion_point(field_release:samples.common.SearchResponse.Result.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchResponse_Result::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:samples.common.SearchResponse.Result.url)
}

// string title = 2;
inline void SearchResponse_Result::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchResponse_Result::title() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchResponse.Result.title)
  return title_.GetNoArena();
}
inline void SearchResponse_Result::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.SearchResponse.Result.title)
}
#if LANG_CXX11
inline void SearchResponse_Result::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.SearchResponse.Result.title)
}
#endif
inline void SearchResponse_Result::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.SearchResponse.Result.title)
}
inline void SearchResponse_Result::set_title(const char* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.SearchResponse.Result.title)
}
inline ::std::string* SearchResponse_Result::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.SearchResponse.Result.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchResponse_Result::release_title() {
  // @@protoc_insertion_point(field_release:samples.common.SearchResponse.Result.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchResponse_Result::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:samples.common.SearchResponse.Result.title)
}

// string snippets = 3;
inline void SearchResponse_Result::clear_snippets() {
  snippets_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SearchResponse_Result::snippets() const {
  // @@protoc_insertion_point(field_get:samples.common.SearchResponse.Result.snippets)
  return snippets_.GetNoArena();
}
inline void SearchResponse_Result::set_snippets(const ::std::string& value) {
  
  snippets_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:samples.common.SearchResponse.Result.snippets)
}
#if LANG_CXX11
inline void SearchResponse_Result::set_snippets(::std::string&& value) {
  
  snippets_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:samples.common.SearchResponse.Result.snippets)
}
#endif
inline void SearchResponse_Result::set_snippets(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  snippets_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:samples.common.SearchResponse.Result.snippets)
}
inline void SearchResponse_Result::set_snippets(const char* value, size_t size) {
  
  snippets_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:samples.common.SearchResponse.Result.snippets)
}
inline ::std::string* SearchResponse_Result::mutable_snippets() {
  
  // @@protoc_insertion_point(field_mutable:samples.common.SearchResponse.Result.snippets)
  return snippets_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SearchResponse_Result::release_snippets() {
  // @@protoc_insertion_point(field_release:samples.common.SearchResponse.Result.snippets)
  
  return snippets_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SearchResponse_Result::set_allocated_snippets(::std::string* snippets) {
  if (snippets != NULL) {
    
  } else {
    
  }
  snippets_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snippets);
  // @@protoc_insertion_point(field_set_allocated:samples.common.SearchResponse.Result.snippets)
}

// -------------------------------------------------------------------

// SearchResponse

// repeated .samples.common.SearchResponse.Result results = 1;
inline int SearchResponse::results_size() const {
  return results_.size();
}
inline void SearchResponse::clear_results() {
  results_.Clear();
}
inline const ::samples::common::SearchResponse_Result& SearchResponse::results(int index) const {
  // @@protoc_insertion_point(field_get:samples.common.SearchResponse.results)
  return results_.Get(index);
}
inline ::samples::common::SearchResponse_Result* SearchResponse::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:samples.common.SearchResponse.results)
  return results_.Mutable(index);
}
inline ::samples::common::SearchResponse_Result* SearchResponse::add_results() {
  // @@protoc_insertion_point(field_add:samples.common.SearchResponse.results)
  return results_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::samples::common::SearchResponse_Result >*
SearchResponse::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:samples.common.SearchResponse.results)
  return &results_;
}
inline const ::google::protobuf::RepeatedPtrField< ::samples::common::SearchResponse_Result >&
SearchResponse::results() const {
  // @@protoc_insertion_point(field_list:samples.common.SearchResponse.results)
  return results_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace common
}  // namespace samples

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::samples::common::Loglevel> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::samples::common::Loglevel>() {
  return ::samples::common::Loglevel_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_2eproto__INCLUDED
