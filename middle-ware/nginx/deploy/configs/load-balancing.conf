#user nobody;
# 可选auto、n
worker_processes 1;
worker_rlimit_nofile 100000;
daemon off;

error_log  /usr/local/nginx/logs/error.log warn;
pid        /usr/local/nginx/logs/nginx.pid;

events {
    worker_connections 100000;
}

http {
    # 作为静态资源服务器时，需要打开这个选项
    # gzip on;
    sendfile on;
    include       mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  logs/access.log  main;

    # recv request
    client_header_buffer_size 1k;
    client_body_buffer_size 16m;
    client_header_timeout 60s;
    client_body_timeout 60s;
    client_max_body_size 100m;

    # send response
    send_timeout 60s;

    # keep-alive
    # 0意味着关闭长连接
    keepalive_timeout 75s;

    # 自定义DNS服务器地址，主要用于upstream代理域名时
    #resolver 10.0.0.1 valid=300s ipv6=off;
    #resolver_timeout 10s;

    # define upstream servers
    upstream backend {
        # 1. 必选：设置load balancing method
        # no load balancing method is specified for Round Robin
        # 根据运维篇的描述，选择一个合适的method
        ip_hash;

        # 2. 必选：设置server及限制项
        # 针对server的配置项，详见Nginx运维篇
        # 常用的有：weight, max_conns, slow_start等
        server 10.152.208.13:38080 weight=1 max_conns=1000;
        server 10.152.208.13:38081 weight=1 max_conns=1000;
        
        # 如果设置了max_conns，就需要nginx缓存请求，并设置缓存超时时间
        # need nginx plus....
        #queue 1000 timeout=60;

        # 3. 可选：被动的health check
        #server backend2.example.com max_fails=3 fail_timeout=30s;

        # 4. 可选：自定义DNS解析，主要用于域名代理时
        #server www.sensetime.com weight=1 resolve;
    }

    server {
        listen 8080 backlog=4096 rcvbuf=1k sndbuf=1k;

        location ~ {
            # Host: nginx proxy的IP
            proxy_set_header Host $host;
            # X-Real-IP: client的真实IP
            proxy_set_header X-Real-IP $remote_addr;
            # X-Forwarded-For: 表示请求到达Nginx时，经过所有Proxy地址.such as: 1.1.1.1, 114.248.238.236
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            # 可选：if you need to rewrite
            # rewrite ^/api/v1/(.*)$ /v1/$1 break;

            proxy_pass http://backend;
            # 5. 可选：主动的health check
            # need nginx plus
            # health_check uri=/health interval=5 fails=3 passes=2;
        }
    }
}